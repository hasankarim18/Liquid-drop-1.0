{%- liquid
  assign selected_variant = product.selected_or_first_available_variant
  assign currency_style = section.settings.currency_style
-%}
<div class="my_container {{ template.name }}">
  <h2 class="text-sm text-left mb-4">{{ template.name }} / Product-template-1</h2>
  {% comment %} #product info {% endcomment %}
  <div>
    <product-detail>
      <div
        data-section-id="{{ section.id }}"
        id="product-{{ section.id }}"
        class=" grid grid-cols-1 md:grid-cols-2 gap-4 ">
        <div>
          {% render 'product-media-template-1'
            , product: product
            , selected_variant: selected_variant %}
        </div>
        <div class="product-information relative">
          <div class="sticky top-0 left-0 py-10">
            {% form 'product'
              , product %}
              {% comment %} #vendor {% endcomment %}
              <div class="my-3">
                <span class="text-sm text-gray-500">{{ product.vendor }}</span>
              </div>
              {% comment %} #title {% endcomment %}
              <div class="my-3">
                <h2 class="text-3xl text-gray-800">{{ product.title }}</h2>
              </div>
              {% comment %} #variant {% endcomment %}
              <div class="my-3">
                {{ selected_variant.title }}
              </div>
              {% comment %} #price  {% endcomment %}
              <div class="my-3">
                {% render 'product-template-1-show-price'
                  , product: product
                  , selected_variant: selected_variant %}
              </div>

            {% endform %}
          </div>

        </div>
      </div>
    </product-detail>
  </div>
</div>

{% schema %}
  {
    "name": "Product Template 1",
    "tag": "section",
    "settings": [
      {
        "type": "select",
        "id": "currency_style",
        "label": "Currency Style",
        "options": [
          {
            "label": "money",
            "value": "money"
          },
          {
            "label": "money with currency",
            "value": "money_with_currency"
          },
          {
            "label": "money without currency",
            "value": "money_without_currency"
          }
        ],
        "default": "money"
      }
    ],
    "presets": [
      {
        "name": "Product Template 1",
        "settings": {}
      }
    ]
  }
{% endschema %}


<script>
  document.addEventListener("DOMContentLoaded", () => {
    class ProductDetail extends HTMLElement {
      constructor(){
        super()
        this.productInfo()
      }
  
      productInfo(){
       // console.log('product info')
      
      }
  
    }  
  
    customElements.define('product-detail', ProductDetail)
  
    // #product Info class
  
  
  })
</script>