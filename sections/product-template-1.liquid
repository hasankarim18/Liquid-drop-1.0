{%- liquid
  assign selected_variant = product.selected_or_first_available_variant
  assign currency_style = section.settings.currency_style
  assign product_feature_image = selected_variant.featured_image

  if selected_variant.featured_image
    assign product_feature_image = selected_variant.featured_image
  elsif selected_variant.featured_image == blank and product.images[0]
    assign product_feature_image = product.images[0]
  else
    assign product_feature_image = product.featured_image
  endif
-%}


<div class="my_container {{ template.name }}">
  <h2 class="text-sm text-left mb-4">{{ template.name }} / Product-template-1</h2>
  {% comment %} #product info {% endcomment %}
  <div>
    <product-detail>
      <div
        data-section-id="{{ section.id }}"
        id="product-{{ section.id }}"
        class=" grid grid-cols-1 md:grid-cols-2 gap-4 ">
        <div id="product_media-{{section.id}}" class="">
          {% render 'product-media-template-1'
            , product: product
            , selected_variant: selected_variant
            , product_feature_image: product_feature_image %}
        </div>
        <div class="product-information relative">
          <div class="sticky top-0 left-0 py-10">
            {% form 'product'
              , product
              , id: 'product-form-1'
              , novalidate: 'novalidate' %}
              {% comment %} #variant id {% endcomment %}
              <input
                type="readonly"
                name="id"
                value="{{ selected_variant.id }}">
                {% comment %} #quantity {% endcomment %}
              <input
                type="hidden"
                id="inventory_quantity-{{ section.id }}"
                value="{{ selected_variant.inventory_quantity }}">
              {% comment %} #vendor {% endcomment %}
              <div class="my-3">
                <span class="text-sm text-gray-500">{{ product.vendor }}</span>
              </div>
              {% comment %} #title {% endcomment %}
              <div class="my-3">
                <h2 class="text-3xl text-gray-800">{{ product.title }}</h2>
              </div>
              {% comment %} #variant {% endcomment %}
              <div class="my-3">
                {{ selected_variant.title }}
              </div>
              {% comment %} #price  {% endcomment %}
              <div id="product_price-{{ section.id }}" class="my-3">
                <div data-product-price-container="product_price_container-{{ section.id }}">
                  {% render 'product-template-1-show-price'
                    , product: product
                    , selected_variant: selected_variant
                    , currency_style: currency_style %}
                </div>
              </div>

              {% comment %} #variant complex {% endcomment %}
              {%- unless product.has_only_default_variant -%}
                <variant-selector-select data-url="{{ product.url }}" data-section="{{ section.id }}">
                  <div class="my-3">
                    {% for option in product.options_with_values %}
                      <div class="mb-3">
                        <label class="text-2xl font-bold" for="option-{{section.id}}-{{ forloop[0] }}">{{ option.name }}</label>
                        <select
                          id="option-{{section.id}}-{{ forloop[0] }}"
                          name="options[{{ option.name |  escape }}]"
                          class="w-full p-4 mb-4 border-2"
                          id="">
                          {% for option_value in option.values %}
                            <option
                              {% if option.selected_value == option_value %}
                              selected
                              {% endif %}
                              value="{{ option_value }}">{{ option_value }}</option>
                          {% endfor %}
                        </select>
                      </div>
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </div>
                </variant-selector-select>
              {%- endunless -%}
              {% comment %} #availability {% endcomment %}
              <div id="availability-{{ section.id }}" class="my-3">
                <span>
                  {% if selected_variant.inventory_quantity < 10 %}
                    Only
                  {% endif %}
                  {{ selected_variant.inventory_quantity }} item(s) left in stock.</span>
              </div>
              {% comment %} #quantity {% endcomment %}
              <div class="my-3">
                <label for="quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    class="w-full text-xl text-center p-4 border-2"
                    value="1"
                    min="1"
                    max="{{ selected_variant.inventory_quantity }}"
                    type="number"
                    name="quantity">
                </div>
              </div>

              {% comment %} #description {% endcomment %}
              <div class="my-3">
                <p class="text-gray-700">
                  {{ product.description }}
                </p>
              </div>
              {% comment %} #add tocart {% endcomment %}
              <div class="my-3">
                <button
                  id="addtocart-{{ section.id }}"
                  {% if selected_variant.available == false %}
                  disabled
                  {% endif %}
                  type="submit"
                  name="add"
                  class="add_to_cart">
                  {% if selected_variant.available == false %}
                    sold out
                  {% else %}
                    add to cart
                  {% endif %}
                </button>
              </div>

            {% endform %}
          </div>

        </div>
      </div>
    </product-detail>
  </div>
</div>

{% schema %}
  {
    "name": "Product Template 1",
    "tag": "section",
    "settings": [
      {
        "type": "select",
        "id": "currency_style",
        "label": "Currency Style",
        "options": [
          {
            "label": "money",
            "value": "money"
          },
          {
            "label": "money with currency",
            "value": "money_with_currency"
          },
          {
            "label": "money without currency",
            "value": "money_without_currency"
          }
        ],
        "default": "money"
      }
    ],
    "presets": [
      {
        "name": "Product Template 1",
        "settings": {}
      }
    ]
  }
{% endschema %}


<script>
  document.addEventListener("DOMContentLoaded", () => {
    class ProductDetail extends HTMLElement {
      constructor(){
        super()
        this.productInfo()
      }
  
      productInfo(){
       // console.log('product info')
      
      }
  
    }  
  
    customElements.define('product-detail', ProductDetail)
  
    // #variant scripts 
  
    class VariantSelectorSelectType extends HTMLElement {
      constructor(){
        super()
        this.addEventListener("change", () => {
          this.initVariantSelector()
          
        })
       
      }
  
      initVariantSelector(){
        
        this.getSelectedOptions()
       // this.getVariantJson()
       this.getSelectedVariant()
       if(this.currentVariant){
        this.updateUrl()
        this.updateFormId()
        this.updateUi()
       }
       
      }
  
      getSelectedOptions(){
        this.options = Array.from(this.querySelectorAll('select'), (select) => select.value)
       //console.log(this.options)        
      }
  
      getVariantJson(){
        this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
        return this.variantData       
      }
  
      // #copy this function
      getSelectedVariant(){
        this.currentVariant = this.getVariantJson().find((variant) => {
          const findings = !variant.options.map((option,index) => {
           return this.options[index] === option
          }).includes(false)
          if(findings) return variant  
        })
    //   console.log(this.currentVariant)
      }
  
  
      updateUrl(){
        if(!this.currentVariant) return
        // update the url
        window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`)
      }
  
      updateFormId(){
       
        const form_input = document.querySelector('#product-form-1').querySelector('input[name="id"]')
        form_input.value = this.currentVariant.id
      }
  
      updateUi(){
        const url = `${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`
       // console.log(url)
     
       fetch(url)
       .then(res => res.text())
       .then((responseText) => {
        const html = new DOMParser().parseFromString(responseText, 'text/html')
         const oldPrice = document.getElementById(`product_price-${this.dataset.section}`)
         const newPrice = html.getElementById(`product_price-${this.dataset.section}`)
       
  
         if(oldPrice && newPrice){
            oldPrice.innerHTML = newPrice.innerHTML
         }
  
        //  media update
        const oldMedia = document.getElementById(`product_media-${this.dataset.section}`)
        const newMedia = html.getElementById(`product_media-${this.dataset.section}`)
  
        if(oldMedia && newMedia) oldMedia.innerHTML = newMedia.innerHTML
  
        // update button
        const oldAvailAble = document.getElementById(`availability-${this.dataset.section}`)
        const newAvailAble = html.getElementById(`availability-${this.dataset.section}`)
  
        
  
        if(oldAvailAble && newAvailAble) oldAvailAble.innerHTML = newAvailAble.innerHTML
        
        // update addtocart button
        const addToCart = document.getElementById(`addtocart-${this.dataset.section}`)
        //  id="inventory_quantity-{{ section.id }}"
        const newInventoryQuantity = html.getElementById(`inventory_quantity-${this.dataset.section}`)
        const oldInventoryQuantity = document.getElementById(`inventory_quantity-${this.dataset.section}`)
  
        
  
        if(parseInt(newInventoryQuantity.value) <= 0 ){
          addToCart.innerText = "SOLD OUT"
          addToCart.disabled = true
         
        }else{
          addToCart.innerText = "Add to cart"
          addToCart.disabled = false
        }
  
        
        
  
  
       })
  
      }     
  
      // # class ends
    }
  
    customElements.define('variant-selector-select',VariantSelectorSelectType )
  
  // #eventlistener end 
  })
</script>